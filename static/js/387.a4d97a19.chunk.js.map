{"version":3,"file":"static/js/387.a4d97a19.chunk.js","mappings":"0QAEaA,E,OAAgBC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0L,SC6CtC,EAzCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBd,GAAa,GAAMa,EAAAE,KAAA,GACIC,EAAAA,EAAAA,IAAkB3B,GAAS,KAAD,EAAAsB,EAAAE,EAAAI,KAAzCL,EAAID,EAAJC,KACRhB,EAAWgB,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEjBT,EAASS,EAAAK,GAAMC,SAAS,QAEJ,OAFIN,EAAAC,KAAA,GAExBd,GAAa,GAAOa,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,wBAEvB,kBAViB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAYlBjB,GACF,GAAG,CAACjB,KAGFmC,EAAAA,EAAAA,MAACvC,EAAa,CAAAwC,SAAA,CACXtB,IAASuB,EAAAA,EAAAA,KAAA,KAAAD,SAAItB,IACbJ,IAAa2B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACR,OAAZhC,GAAoBA,EAAQiC,QAAQC,OAAS,EAC5ClC,EAAQiC,QAAQE,KAAI,SAAAC,GAAA,IAAGC,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAEH,EAAFG,GAAE,OACxCV,EAAAA,EAAAA,MAAA,MAAIW,UAAU,oBAAmBV,SAAA,EAC/BD,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASO,MACbN,EAAAA,EAAAA,KAAA,KAAGS,UAAU,eAAcV,SAAEQ,MAFQC,EAGlC,KAGPR,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+CAIX,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledReviews = styled.ul`\n  padding-left: 30px;\n\n  .list-reviews-item {\n    list-style: none;\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n  .reviews-desc {\n    padding-top: 10px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'Api/GetMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { StyledReviews } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await fetchMovieReviews(movieId);\n        setReviews(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <StyledReviews>\n      {error && <p>{error}</p>}\n      {isLoading && <Loader />}\n      {reviews !== null && reviews.results.length > 0 ? (\n        reviews.results.map(({ author, content, id }) => (\n          <li className=\"list-reviews-item\" key={id}>\n            <h3>Author: {author}</h3>\n            <p className=\"reviews-desc\">{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </StyledReviews>\n  );\n};\n\nexport default Reviews;\n"],"names":["StyledReviews","styled","_templateObject","_taggedTemplateLiteral","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieRevi","data","_context","prev","next","fetchMovieReviews","sent","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","results","length","map","_ref2","author","content","id","className"],"sourceRoot":""}