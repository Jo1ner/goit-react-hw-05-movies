{"version":3,"file":"static/js/736.d4e2c34a.chunk.js","mappings":"0QAEaA,E,OAAaC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oL,SCsDnC,EAhDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBd,GAAa,GAAMa,EAAAE,KAAA,GACIC,EAAAA,EAAAA,IAAkB3B,GAAS,KAAD,EAAAsB,EAAAE,EAAAI,KAAzCL,EAAID,EAAJC,KACRhB,EAAWgB,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEjBT,EAASS,EAAAK,GAAMC,SAAS,QAEJ,OAFIN,EAAAC,KAAA,GAExBd,GAAa,GAAOa,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,wBAEvB,kBAViB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAYlBjB,GACF,GAAG,CAACjB,KAGFmC,EAAAA,EAAAA,MAACvC,EAAU,CAAAwC,SAAA,CACE,OAAVtB,IAAkBuB,EAAAA,EAAAA,KAAA,KAAAD,SAAItB,IACtBJ,IAAa2B,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IACR,OAAZhC,GACCA,EAAQiC,KAAKC,KAAI,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAASF,EAATE,UAAWC,EAAIH,EAAJG,KAAI,OAC/CT,EAAAA,EAAAA,MAAA,MAAIU,UAAU,iBAAgBT,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OACES,IACEJ,EAAY,kCAAAK,OAC0BL,GAnCnC,iCAsCLM,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAETb,EAAAA,EAAAA,KAAA,MAAAD,SAAKQ,KACLT,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYO,OAZmBC,EAa/B,MAIf,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  padding-top: 20px;\n  .list-cast-item {\n    width: 150px;\n    list-style: none;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from 'Api/GetMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport { StyledCast } from './Cast.styled';\n\nconst defaultImg = 'https://dummyimage.com/150x225';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [credits, setCredits] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchCredits = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await fetchMovieCredits(movieId);\n        setCredits(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchCredits();\n  }, [movieId]);\n\n  return (\n    <StyledCast>\n      {error !== null && <p>{error}</p>}\n      {isLoading && <Loader />}\n      {credits !== null &&\n        credits.cast.map(({ profile_path, character, name }) => (\n          <li className=\"list-cast-item\" key={name}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : defaultImg\n              }\n              alt={name}\n              width=\"150\"\n              height=\"225\"\n            />\n            <h3>{name}</h3>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n    </StyledCast>\n  );\n};\n\nexport default Cast;\n"],"names":["StyledCast","styled","_templateObject","_taggedTemplateLiteral","movieId","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchCredits","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCred","data","_context","prev","next","fetchMovieCredits","sent","t0","message","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","cast","map","_ref2","profile_path","character","name","className","src","concat","alt","width","height"],"sourceRoot":""}