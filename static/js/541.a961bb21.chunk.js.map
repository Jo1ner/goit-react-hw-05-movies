{"version":3,"file":"static/js/541.a961bb21.chunk.js","mappings":"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","sources":["Api/GetMovies.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Movies/Movie.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ca36f092d65c5702293abafc88e9f6b7';\n\nexport async function fetchTrendingMovies() {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchMovieSearchByKeyword(queryValue) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/search/movie?query=${queryValue}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}\n  `);\n}\n\nexport async function fetchMovieById(movieId) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=${API_KEY}\n  `);\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}\n  `);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}\n  `);\n}\n","const { StyledListItem, StyledMoviesList } = require('pages/Home/Home.styled');\nconst { Link } = require('react-router-dom');\n\nconst defaultImg = 'https://dummyimage.com/300x450';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <StyledMoviesList>\n      {movies.map(movie => (\n        <StyledListItem key={movie.id}>\n          <Link\n            state={{ from: location }}\n            to={`/movies/${movie.id}`}\n            className=\"link\"\n          >\n            <img\n              className=\"img\"\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultImg\n              }\n              alt={movie.title}\n              width=\"300\"\n              height=\"450\"\n            />\n            <h2 className=\"movies-title\">{movie.title}</h2>\n          </Link>\n        </StyledListItem>\n      ))}\n    </StyledMoviesList>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const StyledMoviesList = styled.ul`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  list-style: none;\n  .link {\n    text-decoration: none;\n  }\n  .img {\n    object-fit: cover;\n  }\n  .movies-title {\n    max-width: 100%;\n    padding-top: 10px;\n    padding-bottom: 10px;\n    text-align: center;\n    color: #000000;\n  }\n  .movies-title:hover {\n    color: #8854ad;\n  }\n`;\nexport const StyledListItem = styled.li`\n  width: 300px;\n  border: 1px solid #363333;\n  border-radius: 4px;\n  overflow: hidden;\n`;\nexport const StyledTitle = styled.h1`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n`;\n","import { Link } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nexport const StyledSearch = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  box-shadow: 0px 2px 4px -1px rgba(135, 83, 172, 0.2),\n    0px 4px 5px 0px rgba(135, 83, 172, 0.14),\n    0px 1px 10px 0px rgba(135, 83, 172, 0.12);\n\n  .form {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    border: 1px solid #8854ad;\n  }\n\n  .button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url('https://svgsilh.com/svg/305547.svg');\n    background-size: 70%;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-color: transparent;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  .button:hover {\n    opacity: 1;\n  }\n\n  .button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  .input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n\n  .input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const StyledList = styled.ul`\n  list-style: square;\n  padding-left: 40px;\n\n  .list-item {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n\n  .list-item:hover {\n    color: #8854ad;\n  }\n`;\nexport const StyledLink = styled(Link)`\n  font-size: 32px;\n  text-decoration: none;\n  color: #000000;\n  .item-title {\n    padding-top: 10px;\n    padding-bottom: 10px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { StyledList, StyledSearch } from './Movie.styled';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearchByKeyword } from 'Api/GetMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst MovieDetails = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  const queryValue = searchParams.get('query');\n  console.log('queryValue', queryValue);\n\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    const searchText = evt.currentTarget.elements.searchKey.value;\n    setSearchParams({ query: searchText });\n    evt.currentTarget.reset();\n  };\n\n  useEffect(() => {\n    if (!queryValue) return;\n\n    const fetchSearchedMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const { data } = await fetchMovieSearchByKeyword(queryValue);\n        if (data.results.length === 0) {\n          alert('Nothing was found for your request');\n        }\n        setMovies(data.results);\n      } catch (error) {\n        setMovies(null);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchedMovies();\n  }, [queryValue]);\n\n  return (\n    <div>\n      <StyledSearch>\n        <form onSubmit={onFormSubmit} className=\"form\">\n          <input\n            name=\"searchKey\"\n            required\n            className=\"input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <button type=\"submit\" className=\"button\">\n            <span className=\"button-label\">Search</span>\n          </button>\n        </form>\n      </StyledSearch>\n      <StyledList>\n        {error !== null && <p>{error}</p>}\n        {isLoading && <Loader />}\n        {movies !== null && <MoviesList movies={movies} location={location} />}\n      </StyledList>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","axios","concat","abrupt","sent","stop","fetchMovieSearchByKeyword","_x","_fetchMovieSearchByKeyword","_callee2","queryValue","_context2","fetchMovieById","_x2","_fetchMovieById","_callee3","movieId","_context3","fetchMovieCredits","_x3","_fetchMovieCredits","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","_require","require","StyledListItem","StyledMoviesList","Link","_ref","movies","location","_jsx","children","map","movie","_jsxs","state","from","to","id","className","src","poster_path","alt","title","width","height","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","StyledTitle","_templateObject3","StyledSearch","StyledList","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useLocation","get","console","log","useEffect","fetchSearchedMovies","_yield$fetchMovieSear","data","results","length","alert","t0","message","finish","onSubmit","evt","preventDefault","searchText","currentTarget","elements","searchKey","value","query","reset","name","required","type","autoComplete","autoFocus","placeholder","Loader","MoviesList"],"sourceRoot":""}