{"version":3,"file":"static/js/257.96fcf236.chunk.js","mappings":"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","sources":["Api/GetMovies.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ca36f092d65c5702293abafc88e9f6b7';\n\nexport async function fetchTrendingMovies() {\n  return await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?language=en-US&api_key=${API_KEY}`\n  );\n}\n\nexport async function fetchMovieSearchByKeyword(queryValue) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/search/movie?query=${queryValue}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}\n  `);\n}\n\nexport async function fetchMovieById(movieId) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/movie/${movieId}?language=en-US&api_key=${API_KEY}\n  `);\n}\n\nexport async function fetchMovieCredits(movieId) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}\n  `);\n}\n\nexport async function fetchMovieReviews(movieId) {\n  return await axios.get(`\n    https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}\n  `);\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  font-size: 24px;\n  font-weight: 500;\n  width: 130px;\n  border-radius: 5px;\n  border: solid 1px #8854ad;\n  padding: 10px;\n  text-decoration: none;\n  color: #000000;\n  text-align: center;\n  margin: 20px 0px 20px 30px;\n\n  &:hover {\n    color: #8854ad;\n  }\n`;\n\nexport const StyledMovieDetails = styled.div`\n  display: flex;\n  gap: 24px;\n  padding: 20px 0px 20px 30px;\n\n  .movie-title {\n    font-size: 40px;\n    padding-bottom: 14px;\n  }\n  .title-desc {\n    font-size: 22px;\n    padding-bottom: 8px;\n  }\n  .desc-list {\n    padding-left: 18px;\n    list-style: square;\n  }\n  .desc {\n    font-size: 18px;\n    padding-bottom: 14px;\n  }\n`;\n\nexport const StyledAddInfo = styled.div`\n  .title-info {\n    padding-left: 30px;\n  }\n`;\n","import React, { Suspense, lazy, useEffect, useRef, useState } from 'react';\nimport { Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'Api/GetMovies';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  StyledAddInfo,\n  StyledLink,\n  StyledMovieDetails,\n} from './MovieDetails.styled';\n\nconst Cast = lazy(() => import('../../components/Cast/Cast'));\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\n\nconst defaultImg = 'https://dummyimage.com/360x500';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  console.log('location: ', location);\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await fetchMovieById(movieId);\n\n        setMovieDetails(data);\n      } catch (error) {\n        setMovieDetails(null);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n  return (\n    <div>\n      <StyledLink to={backLinkRef.current}>Go back</StyledLink>\n      {error !== null && <p>{error}</p>}\n      {isLoading && <Loader />}\n      {movieDetails !== null && (\n        <div>\n          <StyledMovieDetails>\n            <img\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n                  : defaultImg\n              }\n              alt={movieDetails.title}\n              width=\"360\"\n              height=\"500\"\n            />\n\n            <div>\n              <h2 className=\"movie-title\">\n                {movieDetails.title} ({movieDetails.release_date.split('-')[0]})\n              </h2>\n              <p className=\"desc\">\n                User Score: {movieDetails.vote_average.toFixed(2)}\n              </p>\n              <h3 className=\"title-desc\">Overview</h3>\n              <p className=\"desc\">{movieDetails.overview}</p>\n              <h3 className=\"title-desc\">Genres</h3>\n              <ul className=\"desc-list\">\n                {movieDetails.genres.map(({ name, id }) => (\n                  <li key={id}>{name}</li>\n                ))}\n              </ul>\n            </div>\n          </StyledMovieDetails>\n          <StyledAddInfo>\n            <h3 className=\"title-info\">Additional information</h3>\n            <ul>\n              <StyledLink to=\"reviews\">Reviews</StyledLink>\n              <StyledLink to=\"cast\">Cast</StyledLink>\n            </ul>\n          </StyledAddInfo>\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route path=\"reviews\" element={<Reviews />} />\n              <Route path=\"cast\" element={<Cast />} />\n            </Routes>\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","fetchTrendingMovies","_fetchTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","axios","concat","abrupt","sent","stop","fetchMovieSearchByKeyword","_x","_fetchMovieSearchByKeyword","_callee2","queryValue","_context2","fetchMovieById","_x2","_fetchMovieById","_callee3","movieId","_context3","fetchMovieCredits","_x3","_fetchMovieCredits","_callee4","_context4","fetchMovieReviews","_x4","_fetchMovieReviews","_callee5","_context5","StyledLink","styled","Link","_templateObject","_taggedTemplateLiteral","StyledMovieDetails","_templateObject2","StyledAddInfo","_templateObject3","Cast","lazy","Reviews","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","location","useLocation","console","log","backLinkRef","useRef","state","from","useEffect","fetchMovieDetails","_ref","_yield$fetchMovieById","data","t0","message","finish","_jsxs","children","_jsx","to","current","Loader","src","poster_path","alt","title","width","height","className","release_date","split","vote_average","toFixed","overview","genres","map","_ref2","name","id","Suspense","fallback","Routes","Route","path","element"],"sourceRoot":""}